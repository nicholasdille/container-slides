stages:
- prepare
- build
- test
- promote

services:
- docker:28.3.2-dind

default:
  image: docker:28.3.2

variables:
  DOCKER_BUILDKIT: 1

.docker-login:
  before_script:
  - docker login --username ${CI_REGISTRY_USER} --password ${CI_REGISTRY_PASSWORD} ${CI_REGISTRY}
  after_script:
  - docker logout ${CI_REGISTRY}

prescan:
  stage: prepare
  script:
  - |
    apk add --update-cache --no-cache \
        jq
  - |
    docker build . \
        --target base \
        --cache-from ${CI_REGISTRY_IMAGE}:dev \
        --tag base
  - |
    PACKAGES=$(
      docker run \
          --rm \
          --mount type=bind,src=/var/run/docker.sock,dst=/var/run/docker.sock \
          aquasec/trivy \
              --no-progress \
              --vuln-type os \
              --severity HIGH,CRITICAL \
              --ignore-unfixed \
              --light \
              --quiet \
              --format json \
              base | \
          jq --raw-output '
              .Results[] | select(.Class == "os-pkgs") | select(.Vulnerabilities != null) | .Vulnerabilities[].PkgName
              ' | \
          uniq | \
          tr '\n' ' ' \
    )
  - echo "${PACKAGES}" >PACKAGES
  artifacts:
    paths:
      - PACKAGES

build:
  stage: build
  extends: .docker-login
  script:
  - |
    docker build . \
        --cache-from ${CI_REGISTRY_IMAGE}:dev \
        --build-arg PACKAGES="$(cat PACKAGES)" \
        --tag ${CI_REGISTRY_IMAGE}:${CI_PIPELINE_IID} \
        --tag ${CI_REGISTRY_IMAGE}:dev
  - docker push ${CI_REGISTRY_IMAGE}:${CI_PIPELINE_IID}
  - docker push ${CI_REGISTRY_IMAGE}:dev

test:
  stage: test
  image: ${CI_REGISTRY_IMAGE}:${CI_PIPELINE_IID}
  script:
  - kubectl version --client --short
  - helm version --short

scan:
  stage: test
  image:
    name: aquasec/trivy:0.57.1
    entrypoint: ["/bin/sh", "-c"]
  script:
  - export TRIVY_USERNAME=${CI_REGISTRY_USER}
  - export TRIVY_PASSWORD=${CI_REGISTRY_PASSWORD}
  - printenv | sort
  - |
    trivy image \
        --no-progress \
        --vuln-type os \
        --severity HIGH,CRITICAL \
        --exit-code 1 \
        --ignore-unfixed \
        ${CI_REGISTRY_IMAGE}:${CI_PIPELINE_IID}

promote:
  stage: promote
  extends: .docker-login
  script:
    - docker pull ${CI_REGISTRY_IMAGE}:${CI_PIPELINE_IID}
    - docker tag ${CI_REGISTRY_IMAGE}:${CI_PIPELINE_IID} ${CI_REGISTRY_IMAGE}:stable
    - docker push ${CI_REGISTRY_IMAGE}:stable
