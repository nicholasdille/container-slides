# Image Pull Secrets

# Add image pull secrets
cat <<EOF | kubectl apply -f -
apiVersion: kyverno.io/v1
kind: Policy
metadata:
  name: add-imagepullsecrets
spec:
  validationFailureAction: Enforce
  rules:
  - name: add-imagepullsecret
    match:
      any:
      - resources:
          kinds:
          - Pod
    mutate:
      patchStrategicMerge:
        spec:
          containers:
          - <(image): "reg.corp.com/*"
          imagePullSecrets:
          - name: registry-reg.corp.com
EOF

# Add secret
kubectl create secret docker-registry registry-reg.corp.com --docker-server='https://reg.corp.com' --docker-username='foo' --docker-password='bar'

# Deploy pod
cat <<EOF | kubectl apply -f -
apiVersion: v1
kind: Pod
metadata:
  name: busybox
spec:
  containers:
  - name: busybox
    image: reg.corp.com/busybox:1.36
    args:
    - sleep
    - "1000000"
EOF

# Check pod
kubectl get pod busybox -o yaml | less

# Add support for second registry
cat <<EOF | kubectl apply -f -
apiVersion: kyverno.io/v1
kind: Policy
metadata:
  name: add-imagepullsecrets2
spec:
  validationFailureAction: Enforce
  rules:
  - name: add-imagepullsecret
    match:
      any:
      - resources:
          kinds:
          - Pod
    mutate:
      patchStrategicMerge:
        spec:
          containers:
          - <(image): "reg2.corp.com/*"
          imagePullSecrets:
          - name: registry-reg2.corp.com
EOF

# Add secret for second registry
kubectl create secret docker-registry registry-reg2.corp.com --docker-server='https://reg2.corp.com' --docker-username='foo' --docker-password='bar'

# Deploy pod with images from both private registries
cat <<EOF | kubectl apply -f -
apiVersion: v1
kind: Pod
metadata:
  name: busybox2
spec:
  containers:
  - name: busybox
    image: reg.corp.com/busybox:1.36
    args:
    - sleep
    - "1000000"
  - name: alpine
    image: reg2.corp.com/alpine:3.17
    args:
    - sleep
    - "1000000"
EOF

# Check pod
kubectl get pod busybox2 -o yaml | less
