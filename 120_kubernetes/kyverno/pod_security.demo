# Pod Security Standards

# Prepare namespace
kubectl create namespace test

# Rollout policy
cat <<EOF | tee pod_security-policy.yaml| kubectl apply -f -
apiVersion: kyverno.io/v1
kind: Policy
metadata:
  name: psa
  namespace: test
spec:
  failurePolicy: Fail
  validationFailureAction: Enforce
  rules:
  - name: restricted
    match:
      any:
      - resources:
          kinds:
          - Pod
    validate:
      podSecurity:
        level: restricted
        version: latest
EOF

# Explore CRD
kubectl explain policy.spec
kubectl explain clusterpolicy.spec

# Fail to deploy pod
cat <<EOF | tee busybox-privileged.yaml | kubectl apply -f -
apiVersion: v1
kind: Pod
metadata:
  name: busybox-privileged
  namespace: test
spec:
  containers:
  - name: busybox
    image: busybox
    args:
    - sleep
    - "1000000"
    securityContext:
      allowPrivilegeEscalation: true
EOF

# Deploy failing pod
cat <<EOF | tee busybox.yaml | kubectl apply -f -
apiVersion: v1
kind: Pod
metadata:
  name: busybox
  namespace: test
spec:
  containers:
  - name: busybox
    image: busybox
    args:
    - sleep
    - "1000000"
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
      runAsNonRoot: true
      seccompProfile:
        type: RuntimeDefault
EOF

# Successful deployment (later runtime failure)
cat <<EOF | tee rabbitmq.yaml | kubectl apply -f -
apiVersion: v1
kind: Pod
metadata:
  name: rabbitmq
  namespace: test
spec:
  containers:
  - name: rabbitmq
    image: bitnami/rabbitmq:latest
    args:
    - sleep
    - "1000000"
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
      runAsNonRoot: true
      seccompProfile:
        type: RuntimeDefault
EOF

# Deploy pod with fix
cat <<EOF | kubectl --namespace test apply -f -
apiVersion: v1
kind: Pod
metadata:
  name: busybox-fixed
  namespace: test
spec:
  containers:
  - name: busybox
    image: busybox
    args:
    - sleep
    - "1000000"
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
      runAsNonRoot: true
      runAsUser: 1000
      seccompProfile:
        type: RuntimeDefault
EOF

# Test without deployment
cat <<EOF >pod_security-test.yaml
name: pod_security-test
policies:
- pod_security-policy.yaml
resources:
- busybox-privileged.yaml
- busybox.yaml
- rabbitmq.yaml
results:
- policy: psa
  rule: restricted
  kind: Pod
  resource: busybox-privileged
  result: pass
- policy: psa
  rule: restricted
  kind: Pod
  resource: busybox
  result: pass
- policy: psa
  rule: restricted
  kind: Pod
  resource: rabbitmq
  result: pass
EOF
kyverno test --file-name pod_security-test.yaml .

# Check PolicyReport resource
cat <<EOF | kubectl apply -f -
apiVersion: kyverno.io/v1
kind: Policy
metadata:
  name: psa-audit
  namespace: test
spec:
  background: true
  failurePolicy: Fail
  validationFailureAction: Audit
  rules:
  - name: restricted
    match:
      any:
      - resources:
          kinds:
          - Pod
    validate:
      podSecurity:
        level: restricted
        version: latest
---
apiVersion: kyverno.io/v1
kind: Policy
metadata:
  name: psa-enforce
  namespace: test
spec:
  background: true
  failurePolicy: Fail
  validationFailureAction: Enforce
  rules:
  - name: baseline
    match:
      any:
      - resources:
          kinds:
          - Pod
    validate:
      podSecurity:
        level: baseline
        version: latest
EOF
kubectl --namespace test get policyreport
kubectl --namespace test get policyreport pol-psa -o yaml




# Deployment
cat <<EOF | kubectl apply -f -
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq
  namespace: test
spec:
  selector:
    matchLabels:
      app: rabbitmq
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      containers:
      - name: rabbitmq
        image: bitnami/rabbitmq:latest
        args:
        - sleep
        - "1000000"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
EOF

# Test ehpemeral containers
POD_NAME="$(kubectl -n test get pods -l app=rabbitmq -o jsonpath='{.items[0].metadata.name}')"
kubectl -n test debug -it --attach=false -c debugger --image=busybox "${POD_NAME}"

# Attach to ephemeral container
kubectl -n test exec -it -c debugger "${POD_NAME}" -- sh