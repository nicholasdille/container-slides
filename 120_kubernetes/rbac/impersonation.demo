# Impersonation using RBAC

# Deploy namespace
kubectl apply -f test-namespace.yaml

# Deploy namespace admin
kubectl apply -f test-admin.yaml

# Deploy namespace reader
kubectl apply -f test-reader.yaml

# Deploy impersonation role
kubectl apply -f test-impersonation.yaml

# Create new user in kubeconfig
TOKEN="$(
    kubectl -n test get secrets reader --output json \
    | jq --raw-output '.data.token' \
    | base64 -d
)"
kubectl config set-credentials test-reader --token=${TOKEN}
kubectl config set-context kind-test --user=test-reader --cluster=kind-kind

# Switch context
kubectl config use-context kind-test

# Succeed to access to namespace test
kubectl -n test get all

# Fail to access namespace default
kubectl -n default get all

# Fail to run pod in namespace test
kubectl -n test run -it --image=alpine --command -- sh

# Run pod in namespace test using impersonation
kubectl -n test run -it --image=alpine --command --as=test-admin -- sh

# Fail to remove pod
kubectl -n test delete pod sh

# Remove pod using impersonation
kubectl -n test delete pod sh --as=test-admin