# https://docs.docker.com/compose/compose-file

volumes:
  portainer-data:

services:

  # https://doc.traefik.io/traefik/
  traefik:
    image: traefik:v2.10.4
    command:
    - --log=true
    - --log.level=DEBUG
    - --api=true
    - --api.dashboard=true
    - --entrypoints.http.address=:80
    - --entrypoints.https.address=:443
    - --entrypoints.ssh.address=:2222
    - --providers.file.directory=/etc/traefik/conf.d
    - --providers.docker=true
    - --providers.docker.exposedByDefault=false
    ports:
    - 2222:2222
    - 80:80
    - 443:443
    volumes:
    - ./traefik.d:/etc/traefik/conf.d:ro
    - /root/ssl:/etc/traefik/ssl:ro
    - /var/run/docker.sock:/var/run/docker.sock:ro
    - /etc/localtime:/etc/localtime:ro
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "netstat -tunapl | grep LISTEN | grep :80"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s
    labels:
      traefik.enable: "true"
      # Global authentication middlewares
      traefik.http.middlewares.seat-auth.basicauth.users: ${SEAT_HTPASSWD:?You must supply SEAT_HTPASSWD}
      traefik.http.middlewares.seat-code.basicauth.users: ${SEAT_CODE_HTPASSWD:?You must supply SEAT_CODE_HTPASSWD}
      # Global redirection middleware
      traefik.http.middlewares.redirect-to-https.redirectscheme.scheme: https
      # traefik dashboard: redirection to HTTPS
      traefik.http.routers.traefik.entrypoints: http
      traefik.http.routers.traefik.service: api@internal
      traefik.http.routers.traefik.rule: Host(`traefik.${DOMAIN:?You must supply DOMAIN}`)
      traefik.http.routers.traefik.middlewares: redirect-to-https
      # traefik dashboard: authenticated endpoint
      traefik.http.routers.traefik-s.entrypoints: https
      traefik.http.routers.traefik-s.service: api@internal
      traefik.http.routers.traefik-s.rule: Host(`traefik.${DOMAIN:?You must supply DOMAIN}`)
      traefik.http.routers.traefik-s.tls: "true"
      traefik.http.routers.traefik-s.middlewares: seat-auth

  portainer:
    image: portainer/portainer-ce:2.19.0-alpine
    command:
    - --admin-password=${SEAT_HTPASSWD_ONLY}
    - --host=unix:///var/run/docker.sock
    volumes:
    - /etc/localtime:/etc/localtime:ro
    - /var/run/docker.sock:/var/run/docker.sock
    - portainer-data:/data
    ports:
    - 9000:9000
    labels:
      traefik.enable: "true"
      # Service port
      traefik.http.services.portainer.loadbalancer.server.port: 9000
      # Redirection to HTTPS
      traefik.http.routers.portainer.entrypoints: http
      traefik.http.routers.portainer.rule: Host(`portainer.${DOMAIN:?You must supply DOMAIN}`)
      traefik.http.routers.portainer.service: portainer
      traefik.http.routers.portainer.middlewares: redirect-to-https
      # Unauthenticated endpoint
      traefik.http.routers.portainer-s.entrypoints: https
      traefik.http.routers.portainer-s.rule: Host(`portainer.${DOMAIN:?You must supply DOMAIN}`)
      traefik.http.routers.portainer-s.service: portainer
      traefik.http.routers.portainer-s.tls: "true"

  vscode:
    build:
      context: vscode
    command:
    - --auth
    - none
    - --proxy-domain
    - vscode.${DOMAIN:?You must supply DOMAIN}
    - --disable-telemetry
    volumes:
    - /etc/localtime:/etc/localtime:ro
    - /var/run/docker.sock:/var/run/docker.sock
    - vscode_config:/home/coder/.config
    - vscode_project:/home/coder/project
    healthcheck:
      test: ["CMD-SHELL", "curl -sf http://localhost:8080"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s
    labels:
      traefik.enable: "true"
      # Service port
      traefik.http.services.vscode.loadbalancer.server.port: 8080
      # Redirection to HTTPS
      traefik.http.routers.vscode.entrypoints: http
      traefik.http.routers.vscode.rule: Host(`vscode.${DOMAIN:?You must supply DOMAIN}`)
      traefik.http.routers.vscode.service: vscode
      traefik.http.routers.vscode.middlewares: redirect-to-https
      # Authenticated endpoint
      traefik.http.routers.vscode-s.entrypoints: https
      traefik.http.routers.vscode-s.rule: Host(`vscode.${DOMAIN:?You must supply DOMAIN}`)
      traefik.http.routers.vscode-s.service: vscode
      traefik.http.routers.vscode-s.middlewares: seat-auth
      traefik.http.routers.vscode-s.tls: "true"
